(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>c});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"html {\n  background-color: gray;\n}\n\nh1 {\n  text-align: center;\n  margin: 0;\n  padding: 0;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1000px;\n  border: black solid;\n  gap: 500px;\n}\n.container {\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n}\n\n.player-gameboard {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n.box {\n  border-top: black solid;\n  border-left: black solid;\n  width: 50px;\n  height: 50px;\n}\n\n.box:nth-child(10n) {\n  border-right: black solid;\n}\n\n.box:nth-child(n + 91) {\n  border-bottom: black solid;\n}\n\n.player.box.ship {\n  background-color: green;\n}\n\n.computer-gameboard {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n\n.hit,\n.player.box.ship.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: blue;\n}\n\n.chatlog-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.chatlog {\n  display: flex;\n  flex-grow: 0;\n  height: 200px;\n  min-width: 200px;\n  margin-top: 0px;\n  border: solid black;\n  overflow: hidden;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uCAAuC;AACzC;AACA;EACE,uBAAuB;EACvB,wBAAwB;EACxB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uCAAuC;AACzC;;AAEA;;EAEE,qBAAqB;AACvB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,mBAAmB;EACnB,gBAAgB;AAClB",sourcesContent:["html {\n  background-color: gray;\n}\n\nh1 {\n  text-align: center;\n  margin: 0;\n  padding: 0;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1000px;\n  border: black solid;\n  gap: 500px;\n}\n.container {\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n}\n\n.player-gameboard {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n.box {\n  border-top: black solid;\n  border-left: black solid;\n  width: 50px;\n  height: 50px;\n}\n\n.box:nth-child(10n) {\n  border-right: black solid;\n}\n\n.box:nth-child(n + 91) {\n  border-bottom: black solid;\n}\n\n.player.box.ship {\n  background-color: green;\n}\n\n.computer-gameboard {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n\n.hit,\n.player.box.ship.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: blue;\n}\n\n.chatlog-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.chatlog {\n  display: flex;\n  flex-grow: 0;\n  height: 200px;\n  min-width: 200px;\n  margin-top: 0px;\n  border: solid black;\n  overflow: hidden;\n}\n"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var h=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var r={};(()=>{t.d(r,{PL:()=>q,Ro:()=>U,iV:()=>P,rI:()=>I});let n,e=[];function o(){const n=Math.floor(Math.random()*e.length),t=e[n];e.splice(n,1),P().gameboard.receiveAttack(t[0],t[1])}function a(n){if("computer"!=n.name){const e=document.querySelector(".player-gameboard");n.gameboard.grid.forEach(((n,t)=>{n.forEach(((n,r)=>{const o=document.createElement("div");0==n&&o.classList.add("player","box","zero"),0!=n&&o.classList.add("player","box","ship"),o.id=`player-${t}-${r}`,e.append(o)}))}))}else{const t=document.querySelector(".computer-gameboard");n.gameboard.grid.forEach(((n,r)=>{n.forEach(((n,o)=>{const a=document.createElement("div");var i,s;0==n&&a.classList.add("computer","box","zero"),0!=n&&a.classList.add("computer","box","ship"),a.id=`computer-${r}-${o}`,i=r,s=o,e.push([i,s]),a.addEventListener("click",c,{once:!0}),t.append(a)}))}))}}function i(n,e="ship"){const t=q(),r=(new Date).toLocaleTimeString(),o=document.querySelector(".chat-log-message");o.innerText=`${r}: ${t.name} ${n} enemy ${e}!\n`+o.innerText}function c(n){const e=n.target.id.substring(n.target.id.indexOf("-")+1),t=e[0],r=e[2];U().gameboard.receiveAttack(t,r)}class s{constructor(n,e){this.name=n,this.grid=e}getGrid(){return this.grid}setGrid(n,e){n.forEach((n=>{const t=n[0],r=n[1];this.grid[t][r]=e}))}receiveAttack(n,e){if(console.log(n),console.log(e),0!=this.grid[n][e]){document.getElementById(`${this.name}-${n}-${e}`).classList.add("hit"),i("hit",this.grid[n][e]);const t=U().ships.findIndex((t=>t.name===this.grid[n][e]));U().ships[t].removeHitLocation([+n,+e]),"computer"==q().name&&setTimeout(o,1500)}else document.getElementById(`${this.name}-${n}-${e}`).classList.add("miss"),i("missed"),I(),"computer"==q().name&&setTimeout(o,1500)}}function l(e){return n=Array.from(Array(10),(()=>new Array(10).fill(0))),new s(e,n)}const d=10;class u{constructor(n,e,t,r){this.name=n,this.length=e,this.hits=t,this.location=r}getLocation(){return this.location}removeHitLocation(n){const e=this.getLocation();let t;for(let r=0;r<e.length;r++)e[r][0]==n[0]&&e[r][1]==n[1]&&(t=r);e.splice(t,1),this.hit(),this.isSunk()}hit(){this.hits+=1}isSunk(){this.hits==this.length&&(U().totalShips-=1,0==U().totalShips&&(console.log(`${q().name} won the game!`),"computer"==q().name&&I(),function(){const n=document.querySelector(".computer-gameboard");for(const e of n.children)e.removeEventListener("click",c)}()))}}function A(n){let e=[];return e.push(p("Carrier",5,n)),e.push(p("Battleship",4,n)),e.push(p("Destroyer",3,n)),e.push(p("Submarine",3,n)),e.push(p("Patrol Boat",2,n)),e}function p(n,e,t){const r=function(n,e,t){const r=[],o={0:[1,0],1:[0,1],2:[-1,0],3:[0,-1]};let a=t.getGrid();for(;;){let i=Math.floor(Math.random()*d),c=Math.floor(Math.random()*d),s=Math.floor(4*Math.random());if(0==a[i][c]){r.push([i,c]);for(let n=1;n<=e-1;n++)if(i+=o[s][0],c+=o[s][1],r.push([i,c]),i<0||c<0||i>9||c>9||0!=a[i][c]){r.length=0;break}if(0!=r.length)return t.setGrid(r,n),r}}}(n,e,t);return new u(n,e,0,r)}class h{constructor(n,e,t,r){this.name=n,this.gameboard=e,this.ships=t,this.totalShips=r}}function m(n,e,t){return new h(n,e,t,5)}var f=t(72),g=t.n(f),b=t(825),E=t.n(b),y=t(659),v=t.n(y),C=t(56),x=t.n(C),B=t(540),k=t.n(B),w=t(113),S=t.n(w),L=t(208),M={};M.styleTagTransform=S(),M.setAttributes=x(),M.insert=v().bind(null,"head"),M.domAPI=E(),M.insertStyleElement=k(),g()(L.A,M),L.A&&L.A.locals&&L.A.locals;let T=0,$=[];const j=document.querySelector(".status");function I(){T=0==T?1:0,O()}function q(){return $[T]}function U(){return 0==T?$[1]:$[0]}function O(){let n=q().name;n=n.charAt(0).toUpperCase()+n.slice(1),console.log(n),j.innerHTML=`${n}'s turn`}function P(){return $[0]}document.querySelector(".button").addEventListener("click",(()=>{!function(){const n=l("player"),e=l("computer"),t=A(n),r=A(e),o=m("player",n,t),i=m("computer",e,r);a(o),a(i),$=[o,i],O()}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,